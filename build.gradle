import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    //id 'io.freefair.javadoc-links'
    id 'net.minecraftforge.gradleutils'
    id 'net.minecraftforge.gitversion'
    alias libs.plugins.changelog
    alias libs.plugins.licenser
    alias libs.plugins.plugin.publish
    alias libs.plugins.shadow
}

gradleutils.displayName = 'Forge Gradle Utilities'
description = 'Small collection of utilities for standardizing MinecraftForge gradle scripts'
base.archivesName = 'gradleutils'
group = 'net.minecraftforge'
// version set by gitversion in settings.gradle

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
    withJavadocJar()
}

gradleutils.pluginDevDefaults(configurations, libs.versions.gradle)

// NOTE: If you are making a new Gradle plugin, do not copy this block!
configurations.configureEach {
    resolutionStrategy.dependencySubstitution {
        // NOTE: We build this in this repo, but enforce the module using a dependency substitution
        //  That way, new plugins can effectively copy this buildscript just without this section
        //  The "shadowed" attribute is declared here since project dependencies do not read the published module file
        substitute module('net.minecraftforge:gradleutils-shared') using variant(project(':gradleutils-shared')) {
            attributes {
                attribute(Bundling.BUNDLING_ATTRIBUTE, objects.named(Bundling, Bundling.SHADOWED))
            }
        } because 'Project dependencies do not read the published module file, so the shadowed attribute is manually declared.'
    }
}

dependencies {
    // Static Analysis
    compileOnly libs.nulls

    // Gradle API
    compileOnly libs.gradle

    // GradleUtils Shared Base
    implementation libs.gradleutils.shared

    // JavaDoc Links Plugin
    compileOnly libs.gradle.javadoc.links

    // Versions Plugin
    compileOnly libs.gradle.versions

    // GitHub Actions Workflows
    implementation libs.yaml
}

license {
    header = rootProject.file('LICENSE-header.txt')
    newLine = false
    exclude '**/*.properties'
}

tasks.named('jar', Jar) {
    archiveClassifier = 'thin'
}

tasks.named('shadowJar', ShadowJar) {
    enableAutoRelocation = true
    archiveClassifier = null
    relocationPrefix = 'net.minecraftforge.gradleutils.shadow'
}

tasks.withType(Javadoc).configureEach {
    javadocTool = javaToolchains.javadocToolFor { languageVersion = JavaLanguageVersion.of(24) }
}

changelog {
    from '3.0'
}

gradlePlugin {
    website = gitversion.url
    vcsUrl = gitversion.url + '.git'

    plugins.register('gradleutils') {
        id = 'net.minecraftforge.gradleutils'
        implementationClass = 'net.minecraftforge.gradleutils.GradleUtilsPlugin'
        displayName = gradleutils.displayName
        description = project.description
        tags = ['minecraftforge']
    }
}

publishing {
    repositories {
        maven gradleutils.publishingForgeMaven
    }

    publications.register('pluginMaven', MavenPublication) {
        changelog.publish(it)
        gradleutils.promote(it)

        pom { pom ->
            name = gradleutils.displayName
            description = project.description

            gradleutils.pom.addRemoteDetails(pom)

            licenses {
                license gradleutils.pom.licenses.LGPLv2_1
            }

            developers {
                developer gradleutils.pom.developers.Jonathing
                developer gradleutils.pom.developers.Paint_Ninja
                developer gradleutils.pom.developers.LexManos
            }
        }
    }
}
