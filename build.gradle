plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.licenser' version '1.1.1'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'net.minecraftforge.gradleutils'
    id 'com.gradleup.shadow' version '8.3.6'
}

group = 'net.minecraftforge'
version = gitversion.version.tagOffset
println "Version: $version"

apply from: 'build_shared.gradle'

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.optimizationOptions.indy = true
}

license {
    header = file('LICENSE-header.txt')
    newLine = false
    exclude '** /*.properties'
}

jar {
    archiveClassifier = 'thin'
}

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    enableRelocation =  true
    archiveClassifier = null
    relocationPrefix = 'net.minecraftforge.gradleutils.shadow'
}

javadoc.enabled = false
groovydoc.use = true

// javadocJar is created after evaluation, so we need to configure it here
afterEvaluate {
    tasks.named('javadocJar', Jar) {
        dependsOn groovydoc
        from groovydoc.destinationDir
    }
}

changelog {
    fromBase()
    publishAll = false
}

publishing {
    publications.register('pluginMaven', MavenPublication) {
        changelog.publish(it)
        pom { pom ->
            artifactId = 'gradleutils'
            name = 'Gradle Utils'
            description = 'Used by MinecraftForge projects as a util library for Gradle buildscripts'

            gradleutils.pom.gitHubDetails = pom

            license gradleutils.pom.licenses.LGPLv2_1

            // TODO [GradleUtils] Re-evaluate active developers in GU 3.0
            developers {
                developer gradleutils.pom.Developers.LexManos
                developer gradleutils.pom.Developers.SizableShrimp
                developer gradleutils.pom.Developers.Paint_Ninja
                developer gradleutils.pom.Developers.Jonathing
            }
        }
    }

    repositories {
        maven gradleutils.publishingForgeMaven
    }
}

idea.module { downloadSources = downloadJavadoc = true }
